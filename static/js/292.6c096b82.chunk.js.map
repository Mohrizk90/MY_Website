{"version":3,"file":"static/js/292.6c096b82.chunk.js","mappings":"iMAOA,MAyDA,EAzDiBA,KACf,MAAMC,GAAMC,EAAAA,EAAAA,QAAO,MACbC,GAAWC,EAAAA,EAAAA,GAAUH,EAAK,CAAEI,MAAM,IAElCC,EAAW,CACf,CACEC,MAAO,sCACPC,OAAQ,UACRC,YAAa,0MACbC,aAAc,CAAC,cAAe,SAAU,MAAO,OAAQ,aAAc,YAAa,SAClFC,KAAMC,EAAAA,MAIV,OACEC,EAAAA,EAAAA,KAAA,WAASC,GAAG,WAAWC,UAAU,WAAUC,UACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBH,EAAAA,EAAAA,KAACK,EAAAA,EAAOC,GAAE,CACRJ,UAAU,gBACVK,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IAAMT,SAC/B,cAIDH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAgBd,IAAKA,EAAIe,SACrCV,EAASoB,IAAI,CAACC,EAASC,KACtBX,EAAAA,EAAAA,MAACC,EAAAA,EAAOW,IAAG,CAETd,UAAU,eACVK,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAASpB,EAAW,CAAEkB,QAAS,EAAGC,EAAG,GAAM,CAAC,EAC5CE,WAAY,CAAEC,SAAU,GAAKK,MAAe,GAARF,GACpCG,WAAY,CAAEC,MAAO,MAAOhB,SAAA,EAE5BH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcC,UAC3BH,EAAAA,EAAAA,KAACc,EAAQhB,KAAI,OAEfE,EAAAA,EAAAA,KAAA,MAAAG,SAAKW,EAAQpB,SACbU,EAAAA,EAAAA,MAAA,KAAGF,UAAU,gBAAeC,SAAA,CAAC,WAASW,EAAQnB,WAC9CK,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sBAAqBC,SAAEW,EAAQlB,eAC5CI,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcC,SAC1BW,EAAQjB,aAAagB,IAAI,CAACO,EAAMC,KAC/BrB,EAAAA,EAAAA,KAAA,QAAgBE,UAAU,WAAUC,SACjCiB,GADQC,QAfVN,W","sources":["components/Projects.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useInView } from 'framer-motion';\r\nimport { useRef } from 'react';\r\nimport { FaBrain, FaSmile } from 'react-icons/fa';\r\nimport './Projects.css';\r\n\r\nconst Projects = () => {\r\n  const ref = useRef(null);\r\n  const isInView = useInView(ref, { once: true });\r\n\r\n  const projects = [\r\n    {\r\n      title: 'Quran Recitation Assistant using AI',\r\n      status: 'A Grade',\r\n      description: 'Built an AI-powered application with Whisper ASR, Python, RAG, and LLMs for real-time Quran recitation feedback. Integrated silence detection, Arabic TTS, and interactive UI (Streamlit â†’ React).',\r\n      technologies: ['Whisper ASR', 'Python', 'RAG', 'LLMs', 'Arabic TTS', 'Streamlit', 'React'],\r\n      icon: FaBrain\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"projects\">\r\n      <div className=\"container\">\r\n        <motion.h2\r\n          className=\"section-title\"\r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6 }}\r\n        >\r\n          Projects\r\n        </motion.h2>\r\n        \r\n        <div className=\"projects-grid\" ref={ref}>\r\n          {projects.map((project, index) => (\r\n            <motion.div\r\n              key={index}\r\n              className=\"project-card\"\r\n              initial={{ opacity: 0, y: 30 }}\r\n              animate={isInView ? { opacity: 1, y: 0 } : {}}\r\n              transition={{ duration: 0.6, delay: index * 0.2 }}\r\n              whileHover={{ scale: 1.02 }}\r\n            >\r\n              <div className=\"project-icon\">\r\n                <project.icon />\r\n              </div>\r\n              <h3>{project.title}</h3>\r\n              <p className=\"project-grade\">Status: {project.status}</p>\r\n              <p className=\"project-description\">{project.description}</p>\r\n              <div className=\"project-tech\">\r\n                {project.technologies.map((tech, idx) => (\r\n                  <span key={idx} className=\"tech-tag\">\r\n                    {tech}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects; "],"names":["Projects","ref","useRef","isInView","useInView","once","projects","title","status","description","technologies","icon","FaBrain","_jsx","id","className","children","_jsxs","motion","h2","initial","opacity","y","animate","transition","duration","map","project","index","div","delay","whileHover","scale","tech","idx"],"sourceRoot":""}