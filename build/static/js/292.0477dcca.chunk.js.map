{"version":3,"file":"static/js/292.0477dcca.chunk.js","mappings":"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","sources":["components/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useInView } from 'framer-motion';\r\nimport { useRef } from 'react';\r\nimport { FaExternalLinkAlt, FaGithub, FaEye, FaTimes, FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport './Projects.css';\r\n\r\nconst Projects = () => {\r\n  const ref = useRef(null);\r\n  const isInView = useInView(ref, { once: true });\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  const projects = [\r\n    {\r\n      title: 'Quran Recitation Assistant using AI',\r\n      status: 'A Grade',\r\n      description: 'Built an AI-powered application with Whisper ASR, Python, RAG, and LLMs for real-time Quran recitation feedback. Integrated silence detection, Arabic TTS, and interactive UI (Streamlit â†’ React).',\r\n      technologies: ['Whisper ASR', 'Python', 'RAG', 'LLMs', 'Arabic TTS', 'Streamlit', 'React'],\r\n      images: [\r\n        {\r\n          src: `${process.env.PUBLIC_URL}/projects/screen2.png`,\r\n          alt: 'Quran Assistant Main Interface',\r\n          title: 'Main Interface'\r\n        }\r\n      ],\r\n      liveUrl: '#',\r\n      githubUrl: '#'\r\n    }\r\n  ];\r\n\r\n  // Debug: Log the image path\r\n  console.log('Image path:', `${process.env.PUBLIC_URL}/projects/screen2.png`);\r\n  console.log('PUBLIC_URL:', process.env.PUBLIC_URL);\r\n\r\n  const openImageModal = (image, projectIndex) => {\r\n    setSelectedImage(image);\r\n    setCurrentImageIndex(projectIndex);\r\n  };\r\n\r\n  const closeImageModal = () => {\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  const nextImage = () => {\r\n    const currentProject = projects[currentImageIndex];\r\n    const currentImageIdx = currentProject.images.findIndex(img => img.src === selectedImage.src);\r\n    const nextIdx = (currentImageIdx + 1) % currentProject.images.length;\r\n    setSelectedImage(currentProject.images[nextIdx]);\r\n  };\r\n\r\n  const prevImage = () => {\r\n    const currentProject = projects[currentImageIndex];\r\n    const currentImageIdx = currentProject.images.findIndex(img => img.src === selectedImage.src);\r\n    const prevIdx = currentImageIdx === 0 ? currentProject.images.length - 1 : currentImageIdx - 1;\r\n    setSelectedImage(currentProject.images[prevIdx]);\r\n  };\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"projects\">\r\n      <div className=\"container\">\r\n        <motion.h2\r\n          className=\"section-title\"\r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6 }}\r\n        >\r\n          Projects\r\n        </motion.h2>\r\n        \r\n        <div className=\"projects-container\" ref={ref}>\r\n          {projects.map((project, index) => (\r\n            <motion.div\r\n              key={index}\r\n              className=\"project-card\"\r\n              initial={{ opacity: 0, y: 30 }}\r\n              animate={isInView ? { opacity: 1, y: 0 } : {}}\r\n              transition={{ duration: 0.6, delay: index * 0.2 }}\r\n            >\r\n              <div className=\"project-content\">\r\n                <div className=\"project-info\">\r\n                  <div className=\"project-header\">\r\n                    <h3>{project.title}</h3>\r\n                    <span className=\"project-status\">{project.status}</span>\r\n                  </div>\r\n                  \r\n                  <p className=\"project-description\">{project.description}</p>\r\n                  \r\n                  <div className=\"project-tech\">\r\n                    {project.technologies.map((tech, idx) => (\r\n                      <span key={idx} className=\"tech-tag\">\r\n                        {tech}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n\r\n                  <div className=\"project-links\">\r\n                    {project.liveUrl && project.liveUrl !== '#' && (\r\n                      <a href={project.liveUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">\r\n                        <FaExternalLinkAlt />\r\n                        Live Demo\r\n                      </a>\r\n                    )}\r\n                    {project.githubUrl && project.githubUrl !== '#' && (\r\n                      <a href={project.githubUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">\r\n                        <FaGithub />\r\n                        GitHub\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {project.images && project.images.length > 0 && (\r\n                  <motion.div\r\n                    className=\"project-gallery\"\r\n                    initial={{ opacity: 0, scale: 0.9 }}\r\n                    animate={isInView ? { opacity: 1, scale: 1 } : {}}\r\n                    transition={{ duration: 0.4, delay: 0.3 + index * 0.2 }}\r\n                    onClick={() => openImageModal(project.images[0], index)}\r\n                    whileHover={{ scale: 1.02 }}\r\n                  >\r\n                    <img\r\n                      src={project.images[0].src}\r\n                      alt={project.images[0].alt}\r\n                      loading=\"lazy\"\r\n                      onLoad={(e) => {\r\n                        console.log('Image loaded successfully:', project.images[0].src);\r\n                        e.target.nextSibling.style.display = 'none';\r\n                      }}\r\n                      onError={(e) => {\r\n                        console.log('Image failed to load:', project.images[0].src);\r\n                        e.target.style.display = 'none';\r\n                        e.target.nextSibling.style.display = 'flex';\r\n                      }}\r\n                    />\r\n                    <div className=\"gallery-placeholder\">\r\n                      <FaEye />\r\n                      <span>Loading Screenshot...</span>\r\n                    </div>\r\n                    <div className=\"gallery-overlay\">\r\n                      <FaEye />\r\n                      <span>{project.images[0].title}</span>\r\n                    </div>\r\n                  </motion.div>\r\n                )}\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Image Modal */}\r\n        {selectedImage && (\r\n          <motion.div\r\n            className=\"image-modal\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            onClick={closeImageModal}\r\n          >\r\n            <motion.div\r\n              className=\"modal-content\"\r\n              initial={{ scale: 0.8, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.8, opacity: 0 }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <button className=\"modal-close\" onClick={closeImageModal}>\r\n                <FaTimes />\r\n              </button>\r\n              \r\n              \r\n              <img src={selectedImage.src} alt={selectedImage.alt} />\r\n              <h3>{selectedImage.title}</h3>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects; "],"names":["Projects","ref","useRef","isInView","useInView","once","selectedImage","setSelectedImage","useState","currentImageIndex","setCurrentImageIndex","projects","title","status","description","technologies","images","src","concat","process","alt","liveUrl","githubUrl","console","log","closeImageModal","_jsx","id","className","children","_jsxs","motion","h2","initial","opacity","y","animate","transition","duration","map","project","index","div","delay","tech","idx","href","target","rel","FaExternalLinkAlt","FaGithub","length","scale","onClick","openImageModal","image","projectIndex","whileHover","loading","onLoad","e","nextSibling","style","display","onError","FaEye","exit","stopPropagation","FaTimes"],"sourceRoot":""}